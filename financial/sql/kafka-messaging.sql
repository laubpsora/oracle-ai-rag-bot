CREATE TABLE ORDERS (
    ORDER_ID         VARCHAR2(64 CHAR) PRIMARY KEY,
    FROM_ACCOUNT     NUMBER(19,0) NOT NULL,
    NFT              VARCHAR2(255 CHAR) NOT NULL,
    AMOUNT           NUMBER(18, 2) NOT NULL,
    STATUS           VARCHAR2(128 CHAR),
    CREATED_AT       TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT FK_ORDERS_FROM_ACCOUNT
      FOREIGN KEY (FROM_ACCOUNT)
      REFERENCES FINANCIAL.ACCOUNTS (ACCOUNT_ID)
);

CREATE JSON RELATIONAL DUALITY VIEW orders_dv AS
  SELECT JSON {
    '_id'             : ORDER_ID,
    'fromAccount'     : FROM_ACCOUNT,
    'nft'             : NFT,
    'amount'          : AMOUNT,
    'messagingOption' : MESSAGING_OPTION,
    'createdAt'       : CREATED_AT
  }
  FROM orders
  WITH INSERT UPDATE DELETE CHECK;

CREATE TABLE IF NOT EXISTS INVENTORY (
  inventoryid        VARCHAR(16) PRIMARY KEY NOT NULL,
  inventorylocation  VARCHAR(32),
  inventorycount     INTEGER,
  CONSTRAINT positive_inventory CHECK (inventorycount >= 0)
);




















CREATE TABLE ORDERS (
    ORDER_ID         VARCHAR2(64 CHAR) PRIMARY KEY,
    FROM_ACCOUNT     NUMBER(19,0) NOT NULL,
    NFT         VARCHAR2(255 CHAR) NOT NULL,
    AMOUNT           NUMBER(18, 2) NOT NULL,
    MESSAGING_OPTION VARCHAR2(128 CHAR),
    CRASH_OPTION     VARCHAR2(128 CHAR),
    CREATED_AT       TIMESTAMP DEFAULT SYSTIMESTAMP,
    CONSTRAINT FK_ORDERS_FROM_ACCOUNT
      FOREIGN KEY (FROM_ACCOUNT)
      REFERENCES FINANCIAL.ACCOUNTS (ACCOUNT_ID)
);